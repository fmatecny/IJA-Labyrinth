package ija.Labyrinth;

import ija.Labyrinth.GUI.*;
import ija.Labyrinth.board.MazeBoard;
import ija.Labyrinth.players.*;
import ija.Labyrinth.save.Save;
import java.awt.FlowLayout;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.io.IOException;

/**
 * Trieda reprezenuje hlavne menu
 * Spustac hry - main class
 * @author xmatec00, xnovak1b
 */
public class Game extends javax.swing.JFrame {
    
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JButton jButton5;
    public static Game g;   
    
    public static int size = 0;
    private Screen gui;
    public static boolean player1 = false;
    public static boolean player2 = false;
    public static boolean player3 = false;
    public static boolean player4 = false;
    public static int numPlayer = 0;
    public static int numCards = 0;
    public static boolean load = false;
    public static Player p1, p2, p3, p4;

    /**
     * Creates new form GUI
     */
    public Game() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    /**
     * Vytvorenie uvodneho menu s vyperom moznosti:
     * hrac 1-4 a velkost hracel plochy 5x5 - 11x11
     */                        
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();

        buttonGroup2.add(jRadioButton1);
        buttonGroup2.add(jRadioButton2);
        buttonGroup2.add(jRadioButton3);
        buttonGroup2.add(jRadioButton4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBox1.setText("Player1");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jCheckBox2.setText("Player2");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });

        jCheckBox3.setText("Player3");
        jCheckBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox3ItemStateChanged(evt);
            }
        });

        jCheckBox4.setText("Player4");
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox4ItemStateChanged(evt);
            }
        });

        jButton1.setText("HRA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("LOAD");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }


        });
                
        jRadioButton1.setText("5x5");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("7x7");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("9x9");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("11x11");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton5))
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>  
    
    /**
     * Button - nacitanie ulozenej hry
     */
    private void jButton5ActionPerformed(ActionEvent evt) {
        
        Save loadGame = null;
        try {
             loadGame= Save.loadGame();
        } catch (IOException ex) {
            System.err.println ("Chyba");
        } catch (ClassNotFoundException ex) {
            System.err.println ("Chyba");
        }
        
        load = true;
        size = loadGame.getSize();
        MazeBoard.matrixArr = loadGame.getMatrixArr();
        MazeBoard.freeCard = loadGame.getFreeCard();
        MazeBoard.oneShift = loadGame.isOneShift();

        MazeBoard.shiftLeft = loadGame.isShiftLeft();
        MazeBoard.shiftUp = loadGame.isShiftUp();
        MazeBoard.shiftRight = loadGame.isShiftRight();
        MazeBoard.shiftDown = loadGame.isShiftDown();
        
        numPlayer = loadGame.getNumPlayer();
        numCards = loadGame.getNumCards();
        player1 = loadGame.isPlayer1();
        player2 = loadGame.isPlayer2();
        player3 = loadGame.isPlayer3();
        player4 = loadGame.isPlayer4();
        
        p1 = loadGame.getP1();
        p2 = loadGame.getP2();
        p3 = loadGame.getP3();
        p4 = loadGame.getP4();
        
        Screen.actPlayer = loadGame.getActPlayer();
        
        jButton1ActionPerformed(evt);
    }

    /**
     * Button - spustenie a vytvorenie novej hry
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {  

        if (size > 0 && numPlayer > 1)
        {
            
            if (load == false)
            {
                if (player1){
                    p1 = new Player();
                    p1.createPlayer();}
                if (player2){
                    p2 = new Player();
                    p2.createPlayer();}
                if (player3){
                    p3 = new Player();
                    p3.createPlayer();}
                if (player4){
                    p4 = new Player();
                    p4.createPlayer();}
            }
            
            gui = new Screen();
            this.getContentPane().removeAll();
            this.getContentPane().setLayout(new FlowLayout());
            this.getContentPane().add(gui);

            KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
            manager.addKeyEventDispatcher(new MyKeyDispatcher());
            this.getContentPane().revalidate();
            this.pack();
            this.getContentPane().repaint();            
        }
    }                                        

	/**
	 * Radio Button - velkost 5x5
	 */
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        size = 5;
        numCards = 12;
    }                                             

	/**
	 * Radio Button - velkost 7x7
	 */
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        size = 7;
        numCards = 12;
    }                                             

	/**
	 * Radio Button - velkost 9x9
	 */
    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        size = 9;
        numCards = 24;
    }                                             

	/**
	 * Radio Button - velkost 11x11
	 */
    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        size = 11;
        numCards = 24;
    }                                             

	/**
	 * Check box - 1 hrac
	 */
    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) { 
        
        if (jCheckBox1.isSelected())
        {
            player1 = true;
            numPlayer++;
        }
        else 
        {
            player1 = false;
            numPlayer--;
        }
    }                                           

	/**
	 * Check box - 2 hrac
	 */
    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {                                            

        if (jCheckBox2.isSelected())
        {
            player2 = true;
            numPlayer++;
        }
        else 
        {
            player2 = false;
            numPlayer--;
        }
    }                                           

	/**
	 * Check box - 3 hrac
	 */
    private void jCheckBox3ItemStateChanged(java.awt.event.ItemEvent evt) {                                            

        if (jCheckBox3.isSelected())
        {
            player3 = true;
            numPlayer++;
        }
        else 
        {
            player3 = false;
            numPlayer--;
        }
    }                                           
	
	/**
	 * Check box - 4 hrac
	 */
    private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {                                            

        if (jCheckBox4.isSelected())
        {
            player4 = true;
            numPlayer++;
        }
        else 
        {
            player4 = false;
            numPlayer--;
        }
    }                                           


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
               g = new Game();
                g.setVisible(true);
                
            }
        });
    }
                  
             
    
}
